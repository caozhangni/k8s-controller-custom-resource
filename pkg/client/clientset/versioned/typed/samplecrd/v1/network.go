// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	"context"

	v1 "github.com/caozhangni/k8s-controller-custom-resource/pkg/apis/samplecrd/v1"
	scheme "github.com/caozhangni/k8s-controller-custom-resource/pkg/client/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// NetworksGetter has a method to return a NetworkInterface.
// A group's client should implement this interface.
type NetworksGetter interface {
	Networks(namespace string) NetworkInterface
}

// NetworkInterface has methods to work with Network resources.
type NetworkInterface interface {
	Create(ctx context.Context, network *v1.Network, opts metav1.CreateOptions) (*v1.Network, error)
	Update(ctx context.Context, network *v1.Network, opts metav1.UpdateOptions) (*v1.Network, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*v1.Network, error)
	List(ctx context.Context, opts metav1.ListOptions) (*v1.NetworkList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *v1.Network, err error)
	NetworkExpansion
}

// networks implements NetworkInterface
type networks struct {
	*gentype.ClientWithList[*v1.Network, *v1.NetworkList]
}

// newNetworks returns a Networks
func newNetworks(c *SamplecrdV1Client, namespace string) *networks {
	return &networks{
		gentype.NewClientWithList[*v1.Network, *v1.NetworkList](
			"networks",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1.Network { return &v1.Network{} },
			func() *v1.NetworkList { return &v1.NetworkList{} }),
	}
}
